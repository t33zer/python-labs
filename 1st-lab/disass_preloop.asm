0x000000000000063a <+0>:   push   rbp				       #добавление регистра rbp на стэк				
0x000000000000063b <+1>:   mov    rbp,rsp				   #сохранение адреса фрейма текущей функции в регистр rbp							
0x000000000000063e <+4>:   sub    rsp,0x10				   #перемещение указателя стэка на 16 байт		
0x0000000000000642 <+8>:   mov    DWORD PTR [rbp-0x4],0x0  #присваивание переменной i значения 0										
0x0000000000000649 <+15>:  jmp    0x65b <main+33>		   #безусловный переход на "стрелочку"								
0x000000000000064b <+17>:  lea    rdi,[rip+0xa2]           #загрузка эффективного адреса строки "Hello L00p\n" в rdi
                                                                (rdi - первый аргумент в вызове функции puts)
0x0000000000000652 <+24>:  call   0x510 <puts@plt>		   #вызов функции puts c аргументом "Hello L00p\n"								
0x0000000000000657 <+29>:  add    DWORD PTR [rbp-0x4],0x1  #посткрементация переменной i										
>0x000000000000065b <+33>: cmp    DWORD PTR [rbp-0x4],0x9  #сравнение переменной i и 9									
0x000000000000065f <+37>:  jle    0x64b <main+17>		   #если i<=9, совершить переход к инструкции по адресу 0x64b								
0x0000000000000661 <+39>:  mov    eax,0x0                  #обнулить регистр общего назначения					
0x0000000000000666 <+44>:  leave  					       #восстановление кадра стека			
0x0000000000000667 <+45>:  ret                             #возврат потока исполнения программы		
											
