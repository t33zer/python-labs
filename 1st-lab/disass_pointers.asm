0x000000000000066a <+0>:   push   rbp							#добавление регистра rbp на стэк			
0x000000000000066b <+1>:   mov    rbp,rsp						#сохранение адреса фрейма текущей функции в регистр rbp				
0x000000000000066e <+4>:   sub    rsp,0x20						#выделение 32 байт памяти на стеке				
0x0000000000000672 <+8>:   mov    rax,QWORD PTR fs:0x28			#помещение канарейки в регистр общего назвачения						
0x000000000000067b <+17>:  mov    QWORD PTR [rbp-0x8],rax		#помещение канарейки в переменную на стеке
0x000000000000067f <+21>:  xor    eax,eax						#обнуление регистра eax				
0x0000000000000681 <+23>:  mov    DWORD PTR [rbp-0x14],0x2a		#присвоение переменной a значения 42 								
0x0000000000000688 <+30>:  lea    rax,[rbp-0x14]				#загрузка эфф. адреса переменной a в регистр rax				
0x000000000000068c <+34>:  mov    QWORD PTR [rbp-0x10],rax		#помещение адреса переменной a в переменную p								
0x0000000000000690 <+38>:  mov    eax,0x0						#обнуление значения в регистре eax				
0x0000000000000695 <+43>:  mov    rdx,QWORD PTR [rbp-0x8]		#помещение канарейки в регистр rdx								
0x0000000000000699 <+47>:  xor    rdx,QWORD PTR fs:0x28			#сравнение сохранённой канарейки с оригинальной канарейкой							
0x00000000000006a2 <+56>:  je     0x6a9 <main+63>				#если канарейки совпадают, завершить выполнение проги						
0x00000000000006a4 <+58>:  call   0x540 <__stack_chk_fail@plt>	#если канарейку повредили, вывести 									
0x00000000000006a9 <+63>:  leave  								#восстановление кадра стека		
0x00000000000006aa <+64>:  ret    								#вернуть поток исполнения программы		