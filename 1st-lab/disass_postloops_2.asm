0x0000555555554530 <+0>:     push   rbp                        #добавление регистра rbp на стэк
0x0000555555554531 <+1>:     push   rbx                        #сохранение адреса фрейма текущей функции в регистр rbp
0x0000555555554532 <+2>:     lea    rbp,[rip+0x1bb]            #загрузка эффективного адреса строки "Hello L00p\n"
0x0000555555554539 <+9>:     mov    ebx,0xa                    #помещение 10 в регистр ebx
0x000055555555453e <+14>:    sub    rsp,0x8                    #выделение восьми байт на стеке
0x0000555555554542 <+18>:    nop    WORD PTR [rax+rax*1+0x0]   #пропуск такта процесса
0x0000555555554548 <+24>:    mov    rdi,rbp                    #помещение строки "Hello L00p\n" в регистр rdi(I переменная)
0x000055555555454b <+27>:    call   0x555555554510 <puts@plt>  #вызов функции puts с аргументом 
0x0000555555554550 <+32>:    sub    ebx,0x1                    #декрементация ebx 
0x0000555555554553 <+35>:    jne    0x555555554548 <main+24>   #если ebx не 0, прыжок на main+24
0x0000555555554555 <+37>:    add    rsp,0x8                    #восстановление кадра стека
0x0000555555554559 <+41>:    xor    eax,eax                    #обнуление регистра общего назначения
0x000055555555455b <+43>:    pop    rbx                        #извлечь из стека регистр rbx
0x000055555555455c <+44>:    pop    rbp                        #извлечь из стека регистр rbp
0x000055555555455d <+45>:    ret                               #возврат потока исполнения программы
